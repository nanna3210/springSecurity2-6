package com.nanna.springSecurityRaghu.controller;


import com.nanna.springSecurityRaghu.model.User;
import com.nanna.springSecurityRaghu.model.UserRequest;
import com.nanna.springSecurityRaghu.model.UserResponse;
import com.nanna.springSecurityRaghu.service.IUserService;
import com.nanna.springSecurityRaghu.util.JwtUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/user")
public class UserRestController {
    
    @Autowired
    private IUserService iUserService;
    
    @Autowired
    private AuthenticationManager authenticationManager;
    
    @Autowired
    private JwtUtil jwtUtil;
    
    @PostMapping("/save")
    public ResponseEntity<String> saveuser(@RequestBody User user ) {
    
        Integer userId = iUserService.saveUser ( user );
        String body = "User" + userId + " saved";

        return ResponseEntity.ok (body) ;
        
    }
    
    @PostMapping("/login")
    public ResponseEntity< UserResponse > loginUser(@RequestBody UserRequest userRequest ) {
    
        authenticationManager.authenticate ( new UsernamePasswordAuthenticationToken (
                userRequest.getUsername (), userRequest.getPassword ()
        ) );
        
        String token = jwtUtil.generateToken ( userRequest.getUsername () );
    
        return ResponseEntity.ok (new UserResponse (token,"success generated by nanna"));
        
    }
    
    
    
    
}
